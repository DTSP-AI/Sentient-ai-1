{"kind":"FETCH","data":{"headers":{"accelerate-cache-status":"none","accelerate-query-engine-jwt":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MjcxNTQ5NTAuOTM2LCJpYXQiOjE3MjcxNTQ4OTAuOTM2LCJjYW5TY2FsZSI6ZmFsc2UsIm1hY2hpbmVzIjpbeyJkYXRhYmFzZUhvc3QiOiJhenVyZS5jb20iLCJpZCI6Ijc2OTUzZTFhMWYxZmJkNGYwNDE4NjNjNTAyM2ZiMjU0NGQ2YjVkNGZjYmI0YzE4MjU5YTAzYzE2NGE1YjdjNzQiLCJpbnN0YW5jZUlkIjoiaS0wZjQ2YzVmMWNkZWNlMDVjMSIsInJlZ2lvbiI6InVzLWVhc3QtMSIsImFkZHJlc3MiOiJpLTBmNDZjNWYxY2RlY2UwNWMxLnFlLnByaXNtYS1kYXRhLm5ldCJ9XSwiYWNjZWxlcmF0ZUxpbWl0cyI6eyJhY2NlbGVyYXRlUmVzcG9uc2VTaXplTGltaXQiOjUyNDI4ODAsImFjY2VsZXJhdGVRdWVyeUR1cmF0aW9uTGltaXQiOjEwLCJhY2NlbGVyYXRlSW50ZXJhY3RpdmVUcmFuc2FjdGlvbkR1cmF0aW9uTGltaXQiOjE1fX0.PMreCPeCp4jGso0A5lYP3ASCoAqQ2jhDIdrOHKdT7W4","accelerate-signature":"bda8a95a01a6fd3ffc4d0cc811441447ea02d3652c56e8cddd64f2de22220230","cache-control":"public, s-maxage=86400, max-age=0","cache-tag":"6dd1ebf942af27c113084d36f0e2cf64b3fbecd08b5878809c49a310cb9635c2","cf-cache-status":"DYNAMIC","cf-ray":"8c804ba89997a53a-MIA","connection":"keep-alive","content-encoding":"gzip","content-type":"application/json","date":"Tue, 24 Sep 2024 05:15:14 GMT","last-modified":"Tue, 24 Sep 2024 05:15:14 GMT","prisma-qe-incoming-connections":"1","prisma-qe-incoming-queue-length":"0","prisma-qe-latency":"28.13","prisma-qe-network":"149","prisma-request-id":"8c804ba89997a53a","prisma-start-type":"warm","qe-content-length":"27300","server":"cloudflare","transfer-encoding":"chunked","vary":"Accept-Encoding","x-elapsed":"28130"},"body":"","status":200,"url":"https://accelerate.prisma-data.net/5.19.1/f81cafa8a0179fa2c3fedb42705f13688b2014369aaadc7905a73dfe3b84d245/graphql"},"revalidate":31536000,"tags":[]}